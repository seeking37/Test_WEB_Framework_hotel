{"name": "注册成功", "status": "broken", "statusDetails": {"message": "ValueError: 'NORMAL' is not a valid Rank", "trace": "self = <testcase.test_signup.TestSignup object at 0x000001B88DA46EA0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83efd54eeea4716333f66e9f394b4a6d\")>\ntest_case = {'address': 'Seattle, WA', 'birthday': '1985-12-25', 'description': '其他性别用户成功注册', 'email': 'other-gender@example.com', ...}\n\n    @allure.story(\"用户注册\")\n    @allure.title(\"注册成功\")\n    @pytest.mark.parametrize(\"test_case\", TestDataLoader.get_test_cases('../data/signup_cases.yaml', 'signup_success_cases'), ids=lambda x: x['id'])\n    @pytest.mark.order(1)\n    def test_signup_success(self, driver, test_case):\n        \"\"\"测试用户成功注册\"\"\"\n        with allure.step(f\"执行测试用例: {test_case['description']}\"):\n            driver.get(Utils.BASE_URL)\n            top_page = TopPage(driver)\n            signup_page = top_page.go_to_signup_page()\n    \n            with allure.step(\"填写注册信息\"):\n                signup_page.set_email(test_case['email'])\n                signup_page.set_password(test_case['password'])\n                signup_page.set_password_confirmation(test_case['password_confirmation'])\n                signup_page.set_username(test_case['username'])\n>               signup_page.set_rank(Rank(test_case['rank']))\n\ntestcase\\test_signup.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\seeki\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\enum.py:757: in __call__\n    return cls.__new__(cls, value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <enum 'Rank'>, value = 'NORMAL'\n\n    def __new__(cls, value):\n        # all enum instances are actually created during class construction\n        # without calling this method; this method is called by the metaclass'\n        # __call__ (i.e. Color(3) ), and by pickle\n        if type(value) is cls:\n            # For lookups like Color(Color.RED)\n            return value\n        # by-value search for a matching enum member\n        # see if it's in the reverse mapping (for hashable values)\n        try:\n            return cls._value2member_map_[value]\n        except KeyError:\n            # Not found, no need to do long O(n) search\n            pass\n        except TypeError:\n            # not there, now do long search -- O(n) behavior\n            for member in cls._member_map_.values():\n                if member._value_ == value:\n                    return member\n        # still not found -- verify that members exist, in-case somebody got here mistakenly\n        # (such as via super when trying to override __new__)\n        if not cls._member_map_:\n            raise TypeError(\"%r has no members defined\" % cls)\n        #\n        # still not found -- try _missing_ hook\n        try:\n            exc = None\n            result = cls._missing_(value)\n        except Exception as e:\n            exc = e\n            result = None\n        try:\n            if isinstance(result, cls):\n                return result\n            elif (\n                    Flag is not None and issubclass(cls, Flag)\n                    and cls._boundary_ is EJECT and isinstance(result, int)\n                ):\n                return result\n            else:\n                ve_exc = ValueError(\"%r is not a valid %s\" % (value, cls.__qualname__))\n                if result is None and exc is None:\n>                   raise ve_exc\nE                   ValueError: 'NORMAL' is not a valid Rank\n\nC:\\Users\\seeki\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\enum.py:1171: ValueError"}, "description": "测试用户成功注册", "steps": [{"name": "执行测试用例: 其他性别用户成功注册", "status": "broken", "statusDetails": {"message": "ValueError: 'NORMAL' is not a valid Rank\n", "trace": "  File \"C:\\tocode\\Project\\cursor\\hotel-example\\testcase\\test_signup.py\", line 30, in test_signup_success\n    signup_page.set_rank(Rank(test_case['rank']))\n                         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\seeki\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\enum.py\", line 757, in __call__\n    return cls.__new__(cls, value)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\seeki\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\enum.py\", line 1171, in __new__\n    raise ve_exc\n"}, "steps": [{"name": "填写注册信息", "status": "broken", "statusDetails": {"message": "ValueError: 'NORMAL' is not a valid Rank\n", "trace": "  File \"C:\\tocode\\Project\\cursor\\hotel-example\\testcase\\test_signup.py\", line 30, in test_signup_success\n    signup_page.set_rank(Rank(test_case['rank']))\n                         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\seeki\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\enum.py\", line 757, in __call__\n    return cls.__new__(cls, value)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\seeki\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\enum.py\", line 1171, in __new__\n    raise ve_exc\n"}, "start": 1751092633982, "stop": 1751092634817}], "start": 1751092633039, "stop": 1751092634818}], "parameters": [{"name": "test_case", "value": "{'id': 'user_with_other_gender', 'email': 'other-gender@example.com', 'password': 'password123', 'password_confirmation': 'password123', 'username': 'other user', 'rank': 'NORMAL', 'address': 'Seattle, WA', 'tel': '11223344556', 'gender': 'OTHER', 'birthday': '1985-12-25', 'notification': True, 'expected_header': 'MyPage', 'description': '其他性别用户成功注册'}"}], "start": 1751092633039, "stop": 1751092634819, "uuid": "677ef065-dc60-453f-98fe-af8a84672264", "historyId": "3b87c69c60dbea138da6b410048e26d1", "testCaseId": "c5bf7741ee63a14599be2de5a5de956d", "fullName": "testcase.test_signup.TestSignup#test_signup_success", "labels": [{"name": "feature", "value": "注册功能"}, {"name": "story", "value": "用户注册"}, {"name": "tag", "value": "order(1)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_signup"}, {"name": "subSuite", "value": "TestSignup"}, {"name": "host", "value": "SQG"}, {"name": "thread", "value": "12048-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_signup"}]}