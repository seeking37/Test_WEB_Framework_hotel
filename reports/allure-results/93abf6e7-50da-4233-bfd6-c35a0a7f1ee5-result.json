{"name": "test_icon_settings[icon_success]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 71 == 70\n +  where 71 = <bound method MyPage.get_icon_image_width of <pages.my_page.MyPage object at 0x000001EE7034CAA0>>()\n +    where <bound method MyPage.get_icon_image_width of <pages.my_page.MyPage object at 0x000001EE7034CAA0>> = <pages.my_page.MyPage object at 0x000001EE7034CAA0>.get_icon_image_width", "trace": "self = <testcase.test_mypage_parameterized.TestMyPageParameterized object at 0x000001EE70247710>\ntest_case = {'description': '成功设置图标', 'expected_results': {'border_color': 'black', 'image_exists': True, 'image_width': 70}, 'expected_success': True, 'icon_data': {'color': 'black', 'file_path': 'data/resources/240x240_01.png', 'zoom': 80}, ...}\n\n    @allure.story(\"图标设置\")\n    @pytest.mark.parametrize(\"test_case\", TestDataLoader.get_icon_test_cases(), ids=lambda x: x['id'])\n    @pytest.mark.order(3)\n    def test_icon_settings(self, test_case):\n        \"\"\"测试图标设置功能\"\"\"\n        with allure.step(f\"执行测试用例: {test_case['description']}\"):\n            self.driver.get(Utils.BASE_URL)\n            top_page = TopPage(self.driver)\n    \n            # 登录用户\n            login_data = test_case['login_data']\n            login_page = top_page.go_to_login_page()\n            my_page = login_page.do_login(login_data['email'], login_data['password'])\n            icon_page = my_page.go_to_icon_page()\n    \n            # 设置图标\n            icon_data = test_case['icon_data']\n            file_path = Path(icon_data['file_path'])\n            icon_page.set_icon(file_path)\n    \n            # 如果有zoom和color设置\n            if icon_data['zoom'] is not None:\n                icon_page.set_zoom(icon_data['zoom'])\n            if icon_data['color'] is not None:\n                icon_page.set_color(Color.from_string(icon_data['color']))\n    \n            # 验证结果\n            if test_case['expected_success']:\n                # 成功设置图标\n                my_page = icon_page.go_to_my_page()\n                expected_results = test_case['expected_results']\n    \n                with allure.step(\"验证图标设置成功\"):\n                    assert my_page.exists_icon_image() == expected_results['image_exists']\n>                   assert my_page.get_icon_image_width() == expected_results['image_width']\nE                   assert 71 == 70\nE                    +  where 71 = <bound method MyPage.get_icon_image_width of <pages.my_page.MyPage object at 0x000001EE7034CAA0>>()\nE                    +    where <bound method MyPage.get_icon_image_width of <pages.my_page.MyPage object at 0x000001EE7034CAA0>> = <pages.my_page.MyPage object at 0x000001EE7034CAA0>.get_icon_image_width\n\ntestcase\\test_mypage_parameterized.py:140: AssertionError"}, "description": "测试图标设置功能", "steps": [{"name": "执行测试用例: 成功设置图标", "status": "failed", "statusDetails": {"message": "AssertionError: assert 71 == 70\n +  where 71 = <bound method MyPage.get_icon_image_width of <pages.my_page.MyPage object at 0x000001EE7034CAA0>>()\n +    where <bound method MyPage.get_icon_image_width of <pages.my_page.MyPage object at 0x000001EE7034CAA0>> = <pages.my_page.MyPage object at 0x000001EE7034CAA0>.get_icon_image_width\n", "trace": "  File \"C:\\tocode\\Project\\cursor\\hotel-example\\testcase\\test_mypage_parameterized.py\", line 140, in test_icon_settings\n    assert my_page.get_icon_image_width() == expected_results['image_width']\n"}, "steps": [{"name": "验证图标设置成功", "status": "failed", "statusDetails": {"message": "AssertionError: assert 71 == 70\n +  where 71 = <bound method MyPage.get_icon_image_width of <pages.my_page.MyPage object at 0x000001EE7034CAA0>>()\n +    where <bound method MyPage.get_icon_image_width of <pages.my_page.MyPage object at 0x000001EE7034CAA0>> = <pages.my_page.MyPage object at 0x000001EE7034CAA0>.get_icon_image_width\n", "trace": "  File \"C:\\tocode\\Project\\cursor\\hotel-example\\testcase\\test_mypage_parameterized.py\", line 140, in test_icon_settings\n    assert my_page.get_icon_image_width() == expected_results['image_width']\n"}, "start": 1751091907612, "stop": 1751091907706}], "start": 1751091905186, "stop": 1751091907710}], "parameters": [{"name": "test_case", "value": "{'id': 'icon_success', 'login_data': {'email': 'new-user@example.com', 'password': '11111111'}, 'icon_data': {'file_path': 'data/resources/240x240_01.png', 'zoom': 80, 'color': 'black'}, 'expected_success': True, 'expected_results': {'image_exists': True, 'image_width': 70, 'border_color': 'black'}, 'description': '成功设置图标'}"}], "start": 1751091905186, "stop": 1751091907710, "uuid": "5c9cc9ee-1aac-4398-8c88-cc256b83a51a", "historyId": "39296f1d0e57ddb3fce63e5781b6e515", "testCaseId": "0b6135cf47762e1d486c20915af30691", "fullName": "testcase.test_mypage_parameterized.TestMyPageParameterized#test_icon_settings", "labels": [{"name": "story", "value": "图标设置"}, {"name": "feature", "value": "个人页面"}, {"name": "tag", "value": "order(3)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_mypage_parameterized"}, {"name": "subSuite", "value": "TestMyPageParameterized"}, {"name": "host", "value": "SQG"}, {"name": "thread", "value": "19816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_mypage_parameterized"}]}