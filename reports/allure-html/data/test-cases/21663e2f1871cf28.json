{"uid":"21663e2f1871cf28","name":"输入验证测试","fullName":"testcase.test_reserve.TestReserveParameterized#test_input_validation","historyId":"ba18de2d44502cf2f9f8a4f3344f5c52","time":{"start":1751190893909,"stop":1751190895010,"duration":1101},"description":"测试输入验证","descriptionHtml":"<p>测试输入验证</p>\n","status":"failed","statusMessage":"AssertionError: reserve_date 错误消息不匹配\nassert '' == 'Please fill out this field.'\n  - Please fill out this field.","statusTrace":"self = <testcase.test_reserve.TestReserveParameterized object at 0x00000235FEBE1460>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"22079006a9166cc6f08307e84b4426a1\")>\ntest_case = {'description': '空白值应显示错误', 'expected_messages': {'head_count': 'Please fill out this field.', 'reserve_date': 'Please fill out this field.', 'reserve_term': 'Please fill out this field.'}, 'head_count': '', 'id': 'blank_values', ...}\n\n    @allure.story(\"输入验证\")\n    @allure.title(\"输入验证测试\")\n    @pytest.mark.parametrize(\"test_case\", Utils.get_test_cases('../data/reserve_cases.yaml', 'input_validation_cases'), ids=lambda x: x['id'])\n    @pytest.mark.order(2)\n    def test_input_validation(self, driver, test_case):\n        \"\"\"测试输入验证\"\"\"\n        with allure.step(f\"执行测试用例: {test_case['description']}\"):\n            # 设置为未登录用户场景\n            test_case_setup = {'is_logged_in': False, 'plan_title': test_case['plan_title']}\n            reserve_page = self._setup_reserve_page(test_case_setup)\n    \n            # 处理特殊日期标记\n            reserve_date = self._get_formatted_date(test_case['reserve_date'])\n    \n            # 设置输入值\n            reserve_page.set_reserve_date(reserve_date)\n            reserve_page.set_reserve_term(test_case['reserve_term'])\n            reserve_page.set_head_count(test_case['head_count'])\n            reserve_page.set_username(test_case['username'])  # 移动焦点\n    \n            # 验证错误消息\n            with allure.step(\"验证错误消息\"):\n                for field_name, expected_msg in test_case['expected_messages'].items():\n                    method_name = f\"get_{field_name}_message\"\n                    actual_msg = getattr(reserve_page, method_name)()\n                    if expected_msg is not None:\n>                       assert actual_msg == expected_msg, f\"{field_name} 错误消息不匹配\"\nE                       AssertionError: reserve_date 错误消息不匹配\nE                       assert '' == 'Please fill out this field.'\nE                         - Please fill out this field.\n\ntestcase\\test_reserve.py:169: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1751190885828,"stop":1751190887583,"duration":1755},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"clear_cookies","time":{"start":1751190893889,"stop":1751190893890,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"setup_driver","time":{"start":1751190893890,"stop":1751190893908,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"_xunit_setup_method_fixture_TestReserveParameterized","time":{"start":1751190893890,"stop":1751190893890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"测试输入验证","status":"failed","statusMessage":"AssertionError: reserve_date 错误消息不匹配\nassert '' == 'Please fill out this field.'\n  - Please fill out this field.","statusTrace":"self = <testcase.test_reserve.TestReserveParameterized object at 0x00000235FEBE1460>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"22079006a9166cc6f08307e84b4426a1\")>\ntest_case = {'description': '空白值应显示错误', 'expected_messages': {'head_count': 'Please fill out this field.', 'reserve_date': 'Please fill out this field.', 'reserve_term': 'Please fill out this field.'}, 'head_count': '', 'id': 'blank_values', ...}\n\n    @allure.story(\"输入验证\")\n    @allure.title(\"输入验证测试\")\n    @pytest.mark.parametrize(\"test_case\", Utils.get_test_cases('../data/reserve_cases.yaml', 'input_validation_cases'), ids=lambda x: x['id'])\n    @pytest.mark.order(2)\n    def test_input_validation(self, driver, test_case):\n        \"\"\"测试输入验证\"\"\"\n        with allure.step(f\"执行测试用例: {test_case['description']}\"):\n            # 设置为未登录用户场景\n            test_case_setup = {'is_logged_in': False, 'plan_title': test_case['plan_title']}\n            reserve_page = self._setup_reserve_page(test_case_setup)\n    \n            # 处理特殊日期标记\n            reserve_date = self._get_formatted_date(test_case['reserve_date'])\n    \n            # 设置输入值\n            reserve_page.set_reserve_date(reserve_date)\n            reserve_page.set_reserve_term(test_case['reserve_term'])\n            reserve_page.set_head_count(test_case['head_count'])\n            reserve_page.set_username(test_case['username'])  # 移动焦点\n    \n            # 验证错误消息\n            with allure.step(\"验证错误消息\"):\n                for field_name, expected_msg in test_case['expected_messages'].items():\n                    method_name = f\"get_{field_name}_message\"\n                    actual_msg = getattr(reserve_page, method_name)()\n                    if expected_msg is not None:\n>                       assert actual_msg == expected_msg, f\"{field_name} 错误消息不匹配\"\nE                       AssertionError: reserve_date 错误消息不匹配\nE                       assert '' == 'Please fill out this field.'\nE                         - Please fill out this field.\n\ntestcase\\test_reserve.py:169: AssertionError","steps":[{"name":"执行测试用例: 空白值应显示错误","time":{"start":1751190893910,"stop":1751190895010,"duration":1100},"status":"failed","statusMessage":"AssertionError: reserve_date 错误消息不匹配\nassert '' == 'Please fill out this field.'\n  - Please fill out this field.\n","statusTrace":"  File \"C:\\tocode\\Project\\cursor\\hotel-example\\testcase\\test_reserve.py\", line 169, in test_input_validation\n    assert actual_msg == expected_msg, f\"{field_name} 错误消息不匹配\"\n","steps":[{"name":"设置预订日期","time":{"start":1751190894655,"stop":1751190894754,"duration":99},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"date","value":"''"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"设置预订天数","time":{"start":1751190894755,"stop":1751190894911,"duration":156},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"term","value":"''"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"设置人数","time":{"start":1751190894911,"stop":1751190894956,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"head_count","value":"''"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"设置用户名","time":{"start":1751190894956,"stop":1751190895000,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"''"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"验证错误消息","time":{"start":1751190895000,"stop":1751190895009,"duration":9},"status":"failed","statusMessage":"AssertionError: reserve_date 错误消息不匹配\nassert '' == 'Please fill out this field.'\n  - Please fill out this field.\n","statusTrace":"  File \"C:\\tocode\\Project\\cursor\\hotel-example\\testcase\\test_reserve.py\", line 169, in test_input_validation\n    assert actual_msg == expected_msg, f\"{field_name} 错误消息不匹配\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":5,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":6,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestReserveParameterized::0","time":{"start":1751190895016,"stop":1751190895036,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"clear_cookies::0","time":{"start":1751190895037,"stop":1751190895047,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1751190909676,"stop":1751190911885,"duration":2209},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"酒店预订功能（参数化）"},{"name":"story","value":"输入验证"},{"name":"tag","value":"order(2)"},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test_reserve"},{"name":"subSuite","value":"TestReserveParameterized"},{"name":"host","value":"SQG"},{"name":"thread","value":"10800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_reserve"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"test_case","value":"{'id': 'blank_values', 'description': '空白值应显示错误', 'plan_title': 'Plan with special offers', 'reserve_date': '', 'reserve_term': '', 'head_count': '', 'username': '', 'expected_messages': {'reserve_date': 'Please fill out this field.', 'reserve_term': 'Please fill out this field.', 'head_count': 'Please fill out this field.'}}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["order(2)"]},"source":"21663e2f1871cf28.json","parameterValues":["{'id': 'blank_values', 'description': '空白值应显示错误', 'plan_title': 'Plan with special offers', 'reserve_date': '', 'reserve_term': '', 'head_count': '', 'username': '', 'expected_messages': {'reserve_date': 'Please fill out this field.', 'reserve_term': 'Please fill out this field.', 'head_count': 'Please fill out this field.'}}"]}